"use strict";function googleAnalytics($rootScope,$location,$window){$window.ga("create","UA-66942273-1","auto"),$rootScope.$on("$routeChangeSuccess",function(event){$window.ga("send","pageview",$location.path())})}function routeResolver(Session,$route,$q,$location,GroupService,RoleHelper){function initSession(deferred){Session.available()?deferred.resolve(Session):Session.init().then(function(response){if(""!==response.username||"/accept-invite/:inviteCode/"!==$route.current.originalPath){if(""!==response.username&&"/accept-invite/:inviteCode/"===$route.current.originalPath){var data={code:$route.current.params.inviteCode,active:!1};GroupService.updateMemberInvite(data).then(function(response){redirectTo("/group/"+response.group+"/",deferred,response)},function(response){})}else"/group/:groupId/games/:gameid/add-plays/"===$route.current.originalPath?""!==response.username&&(RoleHelper.isAdmin(response,groupId)||RoleHelper.canEdit(response,groupId))||redirectTo("/group/"+groupId+"/games/"+gameId,deferred,response):"/group/:groupId/settings"===$route.current.originalPath?""!==response.username&&RoleHelper.isAdmin(response,groupId)||redirectTo("/group/"+groupId,deferred,response):"/group/create/"===$route.current.originalPath&&""===response.username&&redirectTo("/group/1",deferred,response);deferred.resolve(response)}else redirectTo("/accounts/login/?next="+$location.path(),deferred,response)})}function redirectTo(path,deferred,session){window.location.replace(path),deferred.reject(session)}var groupId=$route.current.params.groupId,gameId=$route.current.params.gameid;return function(){var deferred=$q.defer();return initSession(deferred),deferred.promise}}function gameSnippet(){return{link:function(scope,element,attrs){},scope:{groupId:"@",game:"="},templateUrl:"static/partials/directives/gameSnippet.html",restrict:"EA"}}function smallLeaderboard(PlayerService,$q,Per100Service){return{link:function(scope,element,attrs){function updateSmallLeaderboard(){if(scope.calculating=!0,["fgm_percent","ts_percent"].indexOf(scope.stat)>-1)scope.leaderboard=_.chain(scope.per100Statlines).filter(function(statline){return statline.off_pos>scope.filterForm.possessions_min&&statline.fga>scope.filterForm.fga_min&&["Team1","Team2"].indexOf(statline.player.first_name)<=-1}).orderBy([scope.stat],["desc"]).slice(0,5).value();else if(["threepm_percent"].indexOf(scope.stat)>-1)scope.leaderboard=_.chain(scope.per100Statlines).filter(function(statline){return statline.off_pos>scope.filterForm.possessions_min&&statline.threepa>scope.filterForm.fga_min&&["Team1","Team2"].indexOf(statline.player.first_name)<=-1}).orderBy([scope.stat],["desc"]).slice(0,5).value();else{var filtered_leaderboard=_.filter(scope.per100Statlines,function(statline){return statline.off_pos>scope.filterForm.possessions_min&&["Team1","Team2"].indexOf(statline.player.first_name)<=-1});"def_rating"===scope.stat?scope.leaderboard=_.chain(filtered_leaderboard).orderBy(["def_rating"],["asc"]).slice(0,5).value():scope.leaderboard=_.chain(filtered_leaderboard).orderBy([scope.stat],["desc"]).slice(0,5).value()}scope.calculating=!1}scope.leaderboard=[],scope.$watch("per100Statlines",function(){scope.per100Statlines&&(console.log("per100Statlines"),updateSmallLeaderboard())}),scope.$watch("filterForm",function(){scope.leaderboard=[],scope.calculating=!0},!0)},scope:{title:"@",stat:"@",color:"@",per100Statlines:"=",filterForm:"=",tooltipDesc:"@"},templateUrl:"static/partials/directives/smallLeaderboard.html",restrict:"EA"}}function GameService($q,$http,$routeParams){return{getGamePlays:function(gameid){var deferred=$q.defer();return $http.get("/api/plays/?gameid="+gameid).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getGame:function(gameid){var deferred=$q.defer();return $http.get("/api/games/"+gameid+"/").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getGames:function(groupId,params){var deferred=$q.defer();return $http.get("/api/games/groupid/"+groupId,{params:params}).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getGameBoxScore:function(gameid){var deferred=$q.defer();return $http.get("/api/games/"+gameid+"/box-score").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getGameAdvBoxScore:function(gameid){var deferred=$q.defer();return $http.get("/api/games/"+gameid+"/adv-box-score").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},calculateStatlines:function(gameid){var deferred=$q.defer();return $http.get("/api/games/"+gameid+"/calculate-statlines").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},createPlay:function(data){var deferred=$q.defer();return $http.post("/api/plays/",data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},updatePlay:function(play){var deferred=$q.defer();return $http.post("/api/plays/"+play.id+"/",play).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getPlay:function(playid){var deferred=$q.defer();return $http.get("/api/plays/"+playid+"/").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},deletePlay:function(playid){var deferred=$q.defer();return $http.delete("/api/plays/"+playid+"/").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise}}}function GroupService($q,$http){return{getGroup:function(groupid){var deferred=$q.defer();return $http.get("/api/groups/"+groupid+"/").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getGroupSeasons:function(groupId){var deferred=$q.defer();return $http.get("/api/group/"+groupId+"/seasons/").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},updateGroup:function(data){var deferred=$q.defer();return $http.put("/api/groups/"+data.id+"/",data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},createGroup:function(data){var deferred=$q.defer();return $http.post("/api/groups/",data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},isGroupAdmin:function(groupid){var deferred=$q.defer();return $http.get("/api/groups/"+groupid+"/verify-group-admin/").then(function(response,status,config,headers){deferred.resolve(response.data.message)},function(response){deferred.reject(response)}),deferred.promise},getMemberPermissions:function(params){var deferred=$q.defer();return $http.get("/api/member-permissions/",{params:params}).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},updateMemberPermission:function(data){var deferred=$q.defer();return $http.put("/api/member-permissions/"+data.id,data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},deleteMemberPermission:function(data){var deferred=$q.defer();return $http.delete("/api/member-permissions/"+data.id,data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},createMemberInvite:function(data){var deferred=$q.defer();return $http.post("/api/member-invite/",data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},updateMemberInvite:function(data){var deferred=$q.defer();return $http.put("/api/member-invite/"+data.code,data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise}}}function Per100Service($q,$http){function calculateSimplePer100(statline,stat){var result=statline[stat]/statline.off_pos*100;return isNaN(result)?0:result}function calculateAdvancedPer100(statline,stat){var result=NaN;switch(stat){case"dreb_percent":result=statline.dreb/statline.dreb_opp*100;break;case"oreb_percent":result=statline.oreb/statline.oreb_opp*100;break;case"treb_percent":result=statline.total_rebounds/(statline.oreb_opp+statline.dreb_opp)*100;break;case"off_rating":result=statline.off_team_pts/statline.off_pos*100;break;case"def_rating":result=statline.def_team_pts/statline.def_pos*100;break;case"fgm_percent":result=statline.fgm/statline.fga*100;break;case"threepm_percent":result=statline.threepm/statline.threepa*100;break;case"ts_percent":result=statline.points/statline.fga*100;break;case"tp_percent":result=statline.ast_points/(statline.asts+statline.pot_ast)*100;break;case"ast_fgm_percent":result=statline.ast_fgm/statline.ast_fga*100;break;case"ast_fga_percent":result=statline.ast_fga/statline.fga*100;break;case"unast_fgm_percent":result=(statline.unast_fgm-statline.pgm)/(statline.unast_fga-statline.pga)*100;break;case"unast_fga_percent":result=(statline.unast_fga-statline.pga)/statline.fga*100;break;case"pgm_percent":result=statline.pgm/statline.pga*100;break;case"pga_percent":result=statline.pga/statline.fga*100}return isNaN(result)?0:result}var simple_statistics=["dreb","oreb","total_rebounds","asts","pot_ast","stls","to","points","blk","ast_fga","ast_fgm"],advanced_statistics=["dreb_percent","oreb_percent","treb_percent","off_rating","def_rating","fgm_percent","threepm_percent","ts_percent","tp_percent","ast_fgm_percent","ast_fga_percent","unast_fgm_percent","unast_fga_percent","pgm_percent","pga_percent"];return{calculatePer100Statlines:function(statlines){for(var per100statlines=[],i=0;i<statlines.length;i++){for(var statline=statlines[i],per100statline={player:statline.player,gp:statline.gp,off_pos:statline.off_pos,fga:statline.fga,threepa:statline.threepa},j=0;j<simple_statistics.length;j++)per100statline[simple_statistics[j]]=calculateSimplePer100(statline,simple_statistics[j]);for(j=0;j<advanced_statistics.length;j++)per100statline[advanced_statistics[j]]=calculateAdvancedPer100(statline,advanced_statistics[j]);per100statlines.push(per100statline)}return per100statlines},calculateSimplePer100:calculateSimplePer100}}function PlayerService($q,$http){return{getPlayers:function(groupId){var deferred=$q.defer();return $http.get("/api/players/"+groupId).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise}}}function RoleHelper($q,$http){return{canEdit:function(user,groupId){if(user)for(var i=0;i<user.group_permissions.length;i++)if(user.group_permissions[i][0]===parseInt(groupId,10)&&"edit"===user.group_permissions[i][2])return!0;return!1},isAdmin:function(user,groupId){if(user)for(var i=0;i<user.group_permissions.length;i++)if(user.group_permissions[i][0]===parseInt(groupId,10)&&"admin"===user.group_permissions[i][2])return!0;return!1}}}function Session($q,$http,UserService,GroupService){function getCurrentUser(){var deferred=$q.defer();return UserService.currentUser().then(function(response){user=response,deferred.resolve(user)},function(response){deferred.reject(response.data)}),deferred.promise}var user;return{init:function(){var deferred=$q.defer();return getCurrentUser().then(function(result){user=result,deferred.resolve(user)},function(error){console.log(error),deferred.reject(error)}),deferred.promise},available:function(){return!!user},currentUser:function(){return user}}}function StatlineService($q,$http){return{getDailyStatlines:function(query){var deferred=$q.defer();return $http.get("/api/daily-statlines/"+query).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},getSeasonStatlines:function(query){query||(query="");var deferred=$q.defer();return $http.get("/api/season-statlines/"+query).then(function(response){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise}}}function UserService($q,$http){return{createUser:function(data){var deferred=$q.defer();return $http.post("/api/user/create",data).then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise},currentUser:function(){var deferred=$q.defer();return $http.get("/api/user/current").then(function(response,status,config,headers){deferred.resolve(response.data)},function(response){deferred.reject(response)}),deferred.promise}}}function AddPlaysController($scope,$routeParams,GameService,Session,playOptions,$anchorScroll){function getPlays(){GameService.getGamePlays($routeParams.gameid).then(function(response){$scope.plays=_.reverse(_.sortBy(response,"time")),calculateScore()},function(response){})}function calculateScore(){$scope.team1_score=0,$scope.team2_score=0;var score_to_add,scoring_plays=["fgm","threepm"],score_type=$scope.game.score_type;_.forEach($scope.plays,function(play){scoring_plays.includes(play.primary_play)&&(score_to_add="2and3"===score_type?"fgm"==play.primary_play?2:3:"fgm"==play.primary_play?1:2,_.find($scope.game.team1,function(player){return play.primary_player.id===player.id})?$scope.team1_score+=score_to_add:$scope.team2_score+=score_to_add)})}$scope.createPlay=function(play){play.game=$scope.game.id,play.secondary_player&&!play.secondary_play&&delete play.secondary_player,play.assist_player&&!play.assist&&delete play.assist_player,null==play.secondary_play&&(delete play.secondary_play,delete play.secondary_player),null==play.assist&&(delete play.assist,delete play.assist_player),$scope.message="Adding Play....",GameService.createPlay(play).then(function(response){$scope.message="Successfully Added",$scope.play={},$scope.plays.push(response),$scope.plays=_.reverse(_.sortBy($scope.plays,"time")),calculateScore(),GameService.calculateStatlines($scope.game.id).then(function(response){}),$scope.playform.$setUntouched()},function(response){$scope.message="Failed to add play"})},$scope.deletePlay=function(playid){GameService.deletePlay(playid).then(function(response){_.remove($scope.plays,function(play){return play.id===playid}),calculateScore()})},$scope.editplay={},$scope.fillEditForm=function(playid){GameService.getPlay(playid).then(function(response){$scope.editplaymessage="",$scope.editplay=response,$scope.editplay.primary_player=response.primary_player.id,$scope.editplay.secondary_player=response.secondary_player&&response.secondary_player.id?response.secondary_player.id:"",$scope.editplay.assist_player=response.assist_player&&response.assist_player.id?response.assist_player.id:"",$scope.editplay.top_play_players=response.top_play_players})},$scope.game={},$scope.groupId=$routeParams.groupId,$scope.loading=!0,$scope.play={},$scope.playOptions=playOptions,$scope.seekToTime=function(timestamp){var split_time=timestamp.split(":"),seconds=3600*parseInt(split_time[0]);seconds+=60*parseInt(split_time[1]),seconds+=parseInt(split_time[2]),$scope.player.playVideo(),$scope.player.seekTo(seconds),$anchorScroll("playeranchor")},$scope.team1_score="-",$scope.team2_score="-",$scope.updatePlay=function(play){play.secondary_player&&!play.secondary_play&&(play.secondary_player="",play.secondary_play=""),play.assist_player&&!play.assist&&(play.assist_player="",play.assist=""),play.hasOwnProperty("top_play_rank")&&!play.top_play_rank&&(play.top_play_rank=""),$scope.editplaymessage="Saving Play....",GameService.updatePlay(play).then(function(response){$scope.editplaymessage="Successfully saved",getPlays(),calculateScore(),GameService.calculateStatlines($scope.game.id).then(function(response){})},function(response){console.log(response),$scope.editplaymessage="Failed to save play"})},$scope.user=Session.currentUser(),GameService.getGame($routeParams.gameid).then(function(response){$scope.game=response;var player_objs=$scope.game.team1.concat($scope.game.team2);angular.forEach(player_objs,function(value,key){this.push({code:value.id,name:value.first_name+" "+value.last_name})},$scope.playOptions.PLAYERS),$scope.loading=!1,getPlays()}),$scope.specifiedTime=null,$scope.player=null,$scope.$on("youtube.player.ready",function($event,player){$scope.player=player}),$scope.grabTime=function(offset){var formattedTime,seconds;seconds=offset?$scope.player.getCurrentTime()-offset:$scope.player.getCurrentTime();var hours=""+Math.floor(seconds/3600);hours.length<2&&(hours="0"+hours);var minutes=""+Math.floor(seconds/60)%60;minutes.length<2&&(minutes="0"+minutes),(seconds=""+Math.floor(seconds%60)).length<2&&(seconds="0"+seconds),formattedTime=hours+":"+minutes+":"+seconds,$scope.play.time=formattedTime},$scope.clearRanks=function(){$scope.editplay.top_play_rank="",$scope.editplay.description="",$scope.editplay.top_play_players=[]}}function AdvPer100BoardController($scope,$controller,StatlineService,PlayerService){$scope.arrowDown=function(stat){return $scope.statSorted===stat&&!$scope.descending},$scope.arrowUp=function(stat){return $scope.statSorted===stat&&$scope.descending},$scope.decimals=1,$scope.descending=!0,$scope.loading=!0,$scope.sort=function(stat){$scope.descending=stat!==$scope.statSorted||!$scope.descending,$scope.statSorted=stat;var sortDirection=$scope.descending?"desc":"asc";$scope.tableStatlines=_.orderBy($scope.tableStatlines,[stat],[sortDirection])},$scope.statSorted="",$scope.tableStatlines=[],$scope.title="Advanced Per 100",$scope.headers=[["player.first_name","Name"],["gp","GP"],["ts_percent","TS%"],["tp_percent","TP%"],["ast_fgm_percent","AST.FGM%"],["ast_fga_percent","AST.FGA%"],["unast_fgm_percent","UNAST.FGM%"],["unast_fga_percent","UNAST.FGA%"],["pgm_percent","PGM%"],["pga_percent","PGA%"]],$scope.$watch("per100Statlines",function(){$scope.tableStatlines=$scope.per100Statlines,$scope.loading=!1}),$scope.$watch("filterForm",function(){$scope.tableStatlines=[],$scope.statSorted="",$scope.loading=!0},!0)}function AdvTotalsBoardController($scope,$controller,StatlineService,PlayerService){$scope.arrowDown=function(stat){return $scope.statSorted===stat&&!$scope.descending},$scope.arrowUp=function(stat){return $scope.statSorted===stat&&$scope.descending},$scope.decimals=1,$scope.descending=!0,$scope.loading=!0,$scope.sort=function(stat){$scope.descending=stat!==$scope.statSorted||!$scope.descending,$scope.statSorted=stat;var sortDirection=$scope.descending?"desc":"asc";$scope.tableStatlines=_.orderBy($scope.tableStatlines,[stat],[sortDirection])},$scope.statSorted="",$scope.tableStatlines=[],$scope.title="Advanced Totals",$scope.headers=[["player.first_name","Name"],["gp","GP"],["ast_fgm","AST.FGM"],["ast_fga","AST.FGA"],["unast_fgm","UNAST.FGM"],["unast_fga","UNAST.FGA"],["ast_points","AST.PTS"],["pgm","PGM"],["pga","PGA"],["fastbreak_points","FB.PTS"],["second_chance_points","SC.PTS"],["def_pos","DEF.POS"],["off_pos","OFF.POS"],["dreb_opp","DREB.OPP"],["oreb_opp","OREB.OPP"]],$scope.$watch("statlines",function(){$scope.tableStatlines=$scope.statlines,$scope.loading=!1}),$scope.$watch("filterForm",function(){$scope.loading=!0,$scope.tableStatlines=[],$scope.statSorted=""},!0)}function CreateGroupController($scope,$location,GroupService,Session,settingOptions){$scope.message="",$scope.save=function(){$scope.message="Saving...",GroupService.createGroup($scope.settings).then(function(response){$scope.message="Saved Successfully",window.location.replace("/group/"+response.id)},function(response){406==response.status?$scope.message="Invalid Beta Code":$scope.message="Failed"})},$scope.settingOptions=settingOptions,$scope.settings={score_type:$scope.settingOptions.SCORE_TYPES[0].code,game_type:$scope.settingOptions.GAME_TYPES[0].code,points_to_win:$scope.settingOptions.POINTS_TO_WIN[0].code,possessions_min:100,fga_min:15},$scope.user={},$scope.user=Session.currentUser()}function GameController($scope,$routeParams,GameService,Session,RoleHelper,$anchorScroll,playOptions){$scope.adv_box_scores=null,$scope.box_scores=null,$scope.filters={primary_play:"",secondary_play:"",assist:"",primary_player:{id:""},secondary_player:{id:""},assist_player:{id:""}},$scope.filterFormVisible=!1,$scope.game=null,$scope.groupId=$routeParams.groupId,$scope.playOptions=playOptions,$scope.player=null,$scope.PLAYERS=[],$scope.search={},$scope.seekToTime=function(timestamp){var split_time=timestamp.split(":"),seconds=3600*parseInt(split_time[0]);seconds+=60*parseInt(split_time[1]),seconds+=parseInt(split_time[2]),$scope.player.playVideo(),$scope.player.seekTo(seconds),jumpToPlayerAnchor()},$scope.showHideFilter=function(){$scope.filterFormVisible=!$scope.filterFormVisible},$scope.user=Session.currentUser(),GameService.getGameBoxScore($routeParams.gameId).then(function(response){$scope.box_scores=response}),GameService.getGameAdvBoxScore($routeParams.gameId).then(function(response){$scope.adv_box_scores=response}),GameService.getGamePlays($routeParams.gameId).then(function(response){$scope.plays=_.orderBy(response,["time"],["asc"])}),GameService.getGame($routeParams.gameId).then(function(response){$scope.game=response;var params={date:$scope.game.date};GameService.getGames($routeParams.groupId,params).then(function(response){for(var games=response,i=0;i<games.length;i++)games[i].id===$scope.game.id&&($scope.next_game=i+1<games.length?games[i+1]:null,$scope.prev_game=i-1>=0?games[i-1]:null)});var all_players=$scope.game.team1.concat($scope.game.team2);$scope.PLAYERS=_.map(all_players,function(obj){return{code:obj.id,name:obj.first_name+" "+obj.last_name}}),$scope.$on("youtube.player.ready",function($event,player){$scope.player=player})},function(){});var jumpToPlayerAnchor=function(){$anchorScroll("playeranchor")};$scope.$watch("filters",function(){$scope.search={},$scope.filters.primary_play&&($scope.search.primary_play=$scope.filters.primary_play),$scope.filters.secondary_play&&($scope.search.secondary_play=$scope.filters.secondary_play),$scope.filters.assist_play&&($scope.search.assist_play=$scope.filters.assist_play),$scope.filters.primary_player.id&&($scope.search.primary_player={id:$scope.filters.primary_player.id}),$scope.filters.secondary_player.id&&($scope.search.secondary_player={id:$scope.filters.secondary_player.id}),$scope.filters.assist_player.id&&($scope.search.assist_player={id:$scope.filters.assist_player.id})},!0)}function GamesController($scope,$routeParams,GameService,Session,RoleHelper){function getGamesPage(published){$scope.loadingPage=!0,GameService.getGames($routeParams.groupId,$scope.pagination).then(function(results){$scope.pagination.currentPage=results.currentPage,$scope.pagination.totalItems=results.totalItems,$scope.filteredDailyGames=results.items,$scope.loadingPage=!1},function(err){console.log(err)})}function pageChanged(){$scope.pagination.currentPage&&getGamesPage()}$scope.changeFiltering=function(){$scope.pagination.published?($scope.pagination.published=!1,$scope.pagination.currentPage=1,$scope.filterMessage="View Published Games"):($scope.pagination.published=!0,$scope.pagination.currentPage=1,$scope.filterMessage="View Unpublished Games"),getGamesPage()},$scope.filteredDailyGames=[],$scope.filterMessage="View Unpublished Games",$scope.games=[],$scope.groupId=$routeParams.groupId,$scope.loadingPage=!0,$scope.pageChanged=pageChanged,$scope.publishedGames=!0,$scope.user=Session.currentUser(),$scope.pagination={published:!0,currentPage:1,numPerPage:12,maxSize:5},pageChanged()}function GroupSettingsController($scope,$routeParams,GroupService,Session,settingOptions,$uibModal,$document,inviteOptions){function getMembers(){GroupService.getMemberPermissions({group:$routeParams.groupId}).then(function(response){$scope.members=response;for(var i=0,length=$scope.members.length;i<length;i++)$scope.editingMembers[$scope.members[i].id]=!1},function(response){console.log("Getting members failed: ",response)})}$scope.close=function(){modalInstance.close()},$scope.editingMembers={},$scope.invite={},$scope.inviteOptions=inviteOptions,$scope.message="",$scope.modify=function(member){$scope.editingMembers[member.id]=!0},$scope.open=function(size,parentSelector){parentSelector&&angular.element($document[0].querySelector(".modal-demo "+parentSelector));(modalInstance=$uibModal.open({animation:!0,templateUrl:"static/partials/inviteModal.html",size:size,scope:$scope})).result.then(function(selectedItem){$scope.selected=selectedItem},function(){console.log("Modal dismissed at: "+new Date)})},$scope.remove=function(member){GroupService.deleteMemberPermission(member).then(function(response){getMembers()},function(response){console.log(response)})},$scope.save=function(){$scope.message="Saving...",GroupService.updateGroup($scope.settings).then(function(response){$scope.message="Saved Successfully"},function(response){$scope.message="Failed to save"})},$scope.send=function(form){form.$valid&&($scope.inviteMessage="Sending Invite...",$scope.invite.group=$routeParams.groupId,GroupService.createMemberInvite($scope.invite).then(function(response){$scope.inviteMessage="Invite Sent"},function(response){$scope.inviteMessage=response.data.message})),console.log("ok clicked")},$scope.settings=void 0,$scope.settingOptions=settingOptions,$scope.update=function(member){$scope.editingMembers[member.id]=!1,GroupService.updateMemberPermission(member).then(function(response){},function(response){console.log(response)})},$scope.user=Session.currentUser(),GroupService.getGroup($routeParams.groupId).then(function(response){$scope.settings=response},function(response){console.log("Getting group failed: ",response)}),getMembers();var modalInstance}function LeaderboardController($scope,$routeParams,GroupService,PlayerService,StatlineService,Session,Per100Service,statDescriptions){function generateTotalStatlines(){var query="?game_type=5v5&group_id="+$routeParams.groupId;query+=0===$scope.filterForm.season?"":"&season="+$scope.filterForm.season,StatlineService.getSeasonStatlines(query).then(function(response){var grouped_lines=_.chain(response).groupBy(function(s){return s.player.id}).map(function(statlines,key){var player={id:key,player:statlines[0].player};return _.assign(player,sumStatline(statlines,key)),player}).filter(function(statline){return["Team1","Team2"].indexOf(statline.player.first_name)<=-1}).orderBy(["player.first_name"],["asc"]).value();$scope.statlines=grouped_lines,$scope.per100Statlines=createPer100Statlines()})}function createPer100Statlines(){return Per100Service.calculatePer100Statlines($scope.statlines)}function sumStatline(statlines,id){for(var stats=["gp","dreb","oreb","total_rebounds","asts","pot_ast","stls","to","points","blk","ast_fga","ast_fgm","off_pos","def_pos","dreb_opp","oreb_opp","off_team_pts","def_team_pts","fgm","fga","threepm","threepa","ast_points","ba","fd","pf","unast_fgm","unast_fga","pgm","pga","fastbreak_points","second_chance_points","ast_points"],statline_aggregate={},i=0;i<statlines.length;i++)for(var statline=statlines[i],j=0;j<stats.length;j++){var stat=stats[j];stat in statline_aggregate||(statline_aggregate[stat]=0),statline_aggregate[stat]+=statline[stat]}return statline_aggregate}$scope.groupId=$routeParams.groupId,$scope.filterForm={},$scope.filterOptions={seasons:[]},$scope.isFormVisible=!1,$scope.ShowHideForm=function(){$scope.isFormVisible=!$scope.isFormVisible},$scope.statlines=[],$scope.statDescriptions=statDescriptions,$scope.per100Statlines=[],GroupService.getGroupSeasons($routeParams.groupId).then(function(response){response.seasons.push({id:0,title:"All"}),$scope.filterOptions.seasons=response.seasons,$scope.filterForm.season=response.seasons[0].id},function(response){console.log("Failed: ",response)}),GroupService.getGroup($routeParams.groupId).then(function(response){$scope.group=response,$scope.filterForm.possessions_min=$scope.group.possessions_min,$scope.filterForm.fga_min=$scope.group.fga_min},function(response){console.log("Failed: ",response)}),$scope.$watch("filterForm",function(newVal,oldVal){newVal!=oldVal&&($scope.season=_.find($scope.filterOptions.seasons,{id:$scope.filterForm.season}),$scope.season&&generateTotalStatlines())},!0)}function NavigationController($scope,$route,Session,RoleHelper){$scope.groupId="",$scope.RoleHelper=RoleHelper,$scope.user={},$scope.$route=$route,console.log("$scope.$route: ",$scope.$route),$scope.$watch("session.currentUser().username",function(){$scope.user=Session.currentUser()})}function Per100BoardController($scope,$controller,StatlineService,PlayerService){$scope.arrowDown=function(stat){return $scope.statSorted===stat&&!$scope.descending},$scope.arrowUp=function(stat){return $scope.statSorted===stat&&$scope.descending},$scope.decimals=1,$scope.descending=!0,$scope.loading=!0,$scope.sort=function(stat){$scope.descending=stat!==$scope.statSorted||!$scope.descending,$scope.statSorted=stat;var sortDirection=$scope.descending?"desc":"asc";$scope.tableStatlines=_.orderBy($scope.tableStatlines,[stat],[sortDirection])},$scope.statSorted="",$scope.tableStatlines=[],$scope.title="Per 100",$scope.headers=[["player.first_name","Name"],["gp","GP"],["points","PTS"],["fgm_percent","FGM%"],["threepm_percent","3PM%"],["asts","AST"],["pot_ast","P.AST"],["dreb","DREB"],["oreb","OREB"],["dreb_percent","DREB%"],["oreb_percent","OREB%"],["total_rebounds","REB"],["treb_percent","REB%"],["stls","STL"],["to","TO"],["blk","BLK"],["off_rating","OFF.RATING"],["def_rating","DEF.RATING"]],$scope.$watch("per100Statlines",function(){$scope.tableStatlines=$scope.per100Statlines,$scope.loading=!1}),$scope.$watch("filterForm",function(){$scope.tableStatlines=[],$scope.statSorted="",$scope.loading=!0},!0)}function RegisterController($scope,$route,UserService,$timeout,$location){$scope.betacode,$scope.message="",$scope.submit=function(){UserService.createUser($scope.userModel).then(function(response){$scope.message="Success! You may now log in. Redirecting to log in page.",$timeout(function(){"next"in $route.current.params?window.location.replace("/accounts/login/?next="+$route.current.params.next):window.location.replace("/accounts/login/")},3e3)},function(response){$scope.message=response.data})},$scope.userModel={},$scope.verifypassword}function TotalsLeaderboardController($scope,$controller,StatlineService,PlayerService){$scope.arrowDown=function(stat){return $scope.statSorted===stat&&!$scope.descending},$scope.arrowUp=function(stat){return $scope.statSorted===stat&&$scope.descending},$scope.decimals=1,$scope.descending=!0,$scope.loading=!0,$scope.sort=function(stat){$scope.descending=stat!==$scope.statSorted||!$scope.descending,$scope.statSorted=stat;var sortDirection=$scope.descending?"desc":"asc";$scope.tableStatlines=_.orderBy($scope.tableStatlines,[stat],[sortDirection])},$scope.statSorted="",$scope.tableStatlines=[],$scope.title="Totals",$scope.headers=[["player.first_name","Name"],["gp","GP"],["fgm","FGM"],["fga","FGA"],["threepm","3PM"],["threepa","3PA"],["oreb","OFF"],["dreb","DEF"],["total_rebounds","REB"],["asts","AST"],["pot_ast","POT.AST"],["to","TO"],["stls","STL"],["blk","BLK"],["ba","BA"],["fd","FD"],["pf","PF"],["points","PTS"]],$scope.$watch("statlines",function(){$scope.tableStatlines=$scope.statlines,$scope.loading=!1}),$scope.$watch("filterForm",function(){$scope.tableStatlines=[],$scope.statSorted="",$scope.loading=!0},!0)}angular.module("saturdayBall",["ngRoute","ngAnimate","ui.bootstrap","youtube-embed"]),angular.module("saturdayBall").constant("settingOptions",{SCORE_TYPES:[{code:"1and2",name:"1's and 2's"},{code:"2and3",name:"2's and 3's"}],GAME_TYPES:[{code:"5v5",name:"5 on 5"},{code:"4v4",name:"4 on 4"},{code:"3v3",name:"3 on 3"},{code:"2v2",name:"2 on 2"},{code:"1v1",name:"1 on 1"}],POINTS_TO_WIN:[{code:"11",name:"11"},{code:"30",name:"30"},{code:"other",name:"Other"}]}).constant("playOptions",{PRIMARY_PLAY:[{code:"fgm",name:"FGM"},{code:"fga",name:"FGA"},{code:"threepm",name:"3PM"},{code:"threepa",name:"3PA"},{code:"blk",name:"BLK"},{code:"to",name:"TO"},{code:"pf",name:"FOUL"},{code:"sub_out",name:"SUB OUT"},{code:"misc",name:"Misc"}],SECONDARY_PLAY:[{code:"dreb",name:"DREB"},{code:"oreb",name:"OREB"},{code:"stls",name:"STL"},{code:"ba",name:"Block Against"},{code:"fd",name:"Foul Drawn"},{code:"sub_in",name:"SUB IN"}],ASSIST_PLAY:[{code:"pot_ast",name:"Potential Assist"},{code:"asts",name:"Assist"}],PLAY_RANKS:[{code:"t01",name:"Top 1"},{code:"t02",name:"Top 2"},{code:"t03",name:"Top 3"},{code:"t04",name:"Top 4"},{code:"t05",name:"Top 5"},{code:"t06",name:"Top 6"},{code:"t07",name:"Top 7"},{code:"t08",name:"Top 8"},{code:"t09",name:"Top 9"},{code:"t10",name:"Top 10"},{code:"nt01",name:"Not Top 1"},{code:"nt02",name:"Not Top 2"},{code:"nt03",name:"Not Top 3"},{code:"nt04",name:"Not Top 4"},{code:"nt05",name:"Not Top 5"},{code:"nt06",name:"Not Top 6"},{code:"nt07",name:"Not Top 7"},{code:"nt08",name:"Not Top 8"},{code:"nt09",name:"Not Top 9"},{code:"nt10",name:"Not Top 10"}],PLAYERS:[]}).constant("statDescriptions",{gp:"Games Played",points:"Points",fd:"Fouls Drawn (Whenever you are fouled)",fgm:"Field Goals Made",fga:"Field Goals Attempted",threepm:"3 Pointers Made",threepa:"3 Pointers Attempted",fgm_percent:"Field Goal Percentage.  Percentage of Field Goals Made",threepm_percent:"3 Point Percentage. Percentage of 3 pointers made",asts:"Assists",pot_ast:"Potential Assists. A pass that would’ve lead to a score if the receiver made the shot.",dreb:"Defensive Rebounds",oreb:"Offensive Rebounds",dreb_percent:"Percentage of defensive rebounds grabbed against total defensive rebounds available",oreb_percent:"Percentage of offensive rebounds grabbed against total offensive rebounds available",total_rebounds:"Total Rebounds",treb_percent:"Percentage of possessions that result in a rebound",stl:"Steals (Anytime you cause a turnover from the other team)",to:"Turnovers",blks:"Blocks (Whenever you deflect a shot attempt)",ba:"Block Against (Whenver your shot gets blocked)",off_rating:"Points scored per 100 possessions while you're on the floor",def_rating:"Points scored against your per 100 possessions while you're on the floor",ts_percent:"True Shooting Percentage. Percentage of Field Goals made with the 3 pointers weighed higher.  Formula is Points / FGA",tp_percent:"True Passing Percentage. Percentage of points made following your assists and potential assists",ast_fgm_percent:"Assisted Shooting %.  Shooting percentage of shots that were assisted by another player.",ast_fga_percent:"Assisted Field Goal %. Percentage of shots attempted that were assisted by another player.",unast_fgm_percent:"Unassisted Shooting %. Shooting percentage of shots that were not assisted by another player.",unast_fga_percent:"Unassisted Field Goal %. Percentage of shots attempted that were not assisted by another player.",pgm_percent:"Putback Shooting %.  Percentage of putbacks that go in.",pga_percent:"Putback Field Goal %.  Percentage of shots that are considered putbacks.",pf:"Personal Fouls (Amount of fouls that you have been called on)"}).constant("inviteOptions",{PERMISSIONS:[{code:"read",name:"READ"},{code:"edit",name:"EDIT"},{code:"admin",name:"ADMIN"}]}),angular.module("saturdayBall").run(googleAnalytics),googleAnalytics.$inject=["$rootScope","$location","$window"],angular.module("saturdayBall").run(["$rootScope","Session",function($rootScope,Session){$rootScope.session=Session}]),angular.module("saturdayBall").config(["$locationProvider","$routeProvider",function($locationProvider,$routeProvider){var routeResolver={preLoad:function(routeResolver){return routeResolver()}};$routeProvider.when("/group/:groupId/games/",{templateUrl:"static/views/games.html",controller:"GamesController",resolve:routeResolver,activetab:"games"}).when("/group/:groupId/games/:gameId/",{templateUrl:"static/views/game.html",controller:"GameController",resolve:routeResolver,activetab:"games"}).when("/group/:groupId/games/:gameid/add-plays/",{templateUrl:"static/views/add_plays.html",controller:"AddPlaysController",resolve:routeResolver,activetab:"games"}).when("/group/:groupId/settings",{templateUrl:"static/views/settings.html",controller:"GroupSettingsController",resolve:routeResolver,activetab:"settings"}).when("/group/create/",{templateUrl:"static/views/creategroup.html",controller:"CreateGroupController",resolve:routeResolver}).when("/register/",{templateUrl:"static/views/register.html",controller:"RegisterController",resolve:routeResolver}).when("/group/:groupId/leaderboard/",{templateUrl:"static/views/leaderboard.html",controller:"LeaderboardController",resolve:routeResolver,activetab:"leaderboard"}).when("/accept-invite/:inviteCode/",{resolve:routeResolver}).otherwise({resolve:{factory:checkRouting}}),$locationProvider.html5Mode(!0)}]),angular.module("saturdayBall").config(["$httpProvider",function($httpProvider){$httpProvider.defaults.xsrfCookieName="csrftoken",$httpProvider.defaults.xsrfHeaderName="X-CSRFToken"}]);var checkRouting=function($q,$rootScope,$location){var path=$location.path();window.location=$location.host()+":8000"+path};angular.module("saturdayBall").factory("routeResolver",routeResolver),routeResolver.$inject=["Session","$route","$q","$location","GroupService","RoleHelper"],angular.module("saturdayBall").directive("gameSnippet",gameSnippet),angular.module("saturdayBall").directive("ngConfirmClick",[function(){return{link:function(scope,element,attr){var msg=attr.ngConfirmClick||"Are you sure?",clickAction=attr.confirmedClick;element.bind("click",function(event){window.confirm(msg)&&scope.$eval(clickAction)})}}}]),angular.module("saturdayBall").directive("smallLeaderboard",smallLeaderboard),smallLeaderboard.$inject=["PlayerService","$q","Per100Service"],angular.module("saturdayBall").factory("GameService",GameService),GameService.$inject=["$q","$http","$routeParams"],angular.module("saturdayBall").factory("GroupService",GroupService),GroupService.$inject=["$q","$http"],angular.module("saturdayBall").factory("Per100Service",Per100Service),Per100Service.$inject=["$q","$http"],angular.module("saturdayBall").factory("PlayerService",PlayerService),angular.module("saturdayBall").factory("RoleHelper",RoleHelper),RoleHelper.$inject=["$q","$http"],angular.module("saturdayBall").factory("Session",Session),Session.$inject=["$q","$http","UserService","GroupService"],angular.module("saturdayBall").factory("StatlineService",StatlineService),angular.module("saturdayBall").factory("UserService",UserService),UserService.$inject=["$q","$http"],angular.module("saturdayBall").controller("AddPlaysController",AddPlaysController),AddPlaysController.$inject=["$scope","$routeParams","GameService","Session","playOptions","$anchorScroll"],angular.module("saturdayBall").controller("AdvPer100BoardController",AdvPer100BoardController),AdvPer100BoardController.$inject=["$scope","$controller","StatlineService","PlayerService"],angular.module("saturdayBall").controller("AdvTotalsBoardController",AdvTotalsBoardController),AdvTotalsBoardController.$inject=["$scope","$controller","StatlineService","PlayerService"],angular.module("saturdayBall").controller("CreateGroupController",CreateGroupController),CreateGroupController.$inject=["$scope","$location","GroupService","Session","settingOptions"],angular.module("saturdayBall").controller("GameController",GameController),GameController.$inject=["$scope","$routeParams","GameService","Session","RoleHelper","$anchorScroll","playOptions"],angular.module("saturdayBall").controller("GamesController",GamesController),GamesController.$inject=["$scope","$routeParams","GameService","Session","RoleHelper"],angular.module("saturdayBall").controller("GroupSettingsController",GroupSettingsController),GroupSettingsController.$inject=["$scope","$routeParams","GroupService","Session","settingOptions","$uibModal","$document","inviteOptions"],angular.module("saturdayBall").controller("LeaderboardController",LeaderboardController),LeaderboardController.$inject=["$scope","$routeParams","GroupService","PlayerService","StatlineService","Session","Per100Service","statDescriptions"],angular.module("saturdayBall").controller("NavigationController",NavigationController),NavigationController.$inject=["$scope","$route","Session","RoleHelper"],angular.module("saturdayBall").controller("Per100BoardController",Per100BoardController),Per100BoardController.$inject=["$scope","$controller","StatlineService","PlayerService"],angular.module("saturdayBall").controller("RegisterController",RegisterController),RegisterController.$inject=["$scope","$route","UserService","$timeout","$location"],angular.module("saturdayBall").controller("TotalsLeaderboardController",TotalsLeaderboardController),TotalsLeaderboardController.$inject=["$scope","$controller","StatlineService","PlayerService"];
//# sourceMappingURL=app.min.js.map